version: 0.2
phases:
  pre_build:
    commands:
      - export DLLVERSION=$(date +1.0.%y%j.%H%M)
      - echo "<BuildInfo>" >> buildinfo.xml
      - echo "<CODEBUILD_BUILD_ID>"$CODEBUILD_BUILD_ID"</CODEBUILD_BUILD_ID>" >> buildinfo.xml
      - echo "<CODEBUILD_SOURCE_VERSION>"$CODEBUILD_SOURCE_VERSION"</CODEBUILD_SOURCE_VERSION>" >> buildinfo.xml
      - echo "<DLLVERSION>"$DLLVERSION"</DLLVERSION>" >> buildinfo.xml
      - echo "<CODEBUILD_BUILD_IMAGE>"$CODEBUILD_BUILD_IMAGE"</CODEBUILD_BUILD_IMAGE>" >> buildinfo.xml
      - echo "<CODEBUILD_INITIATOR>"$CODEBUILD_INITIATOR"</CODEBUILD_INITIATOR>" >> buildinfo.xml
      - echo "<CODEUBUILD_KMS_KEY_ID>"$CODEUBUILD_KMS_KEY_ID"</CODEUBUILD_KMS_KEY_ID>" >> buildinfo.xml
      - echo "</BuildInfo>" >> buildinfo.xml
      - a=$(aws secretsmanager get-secret-value --secret-id supernova/setup/nuget --query 'SecretString' --output text)
      - dotnet restore SuperNova.MEF.NetCore.sln
  build:
    commands:
     - dotnet build SuperNova.MEF.NetCore.sln -c Release /fl /p:Version=$DLLVERSION /p:DebugSymbols=false /p:DebugType=None
  post_build:
    commands:
     - dotnet publish SuperNova.MEF.NetCore.sln -c Release /p:Version=$DLLVERSION /p:DebugSymbols=false /p:DebugType=None  
     - dotnet nuget push bin/*.nupkg --api-key $a --source https://api.nuget.org/v3/index.json
artifacts:
  files:
  discard-paths: no